name: Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.EC2_KEY }}

    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@52.78.212.96 << 'EOF'
          cd ~/blackcows-server
          git pull

          # 환경변수 파일 생성
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" > .env
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=30" >> .env
          echo "REFRESH_TOKEN_EXPIRE_DAYS=7" >> .env
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
          echo "FIREBASE_PRIVATE_KEY_ID=${{ secrets.FIREBASE_PRIVATE_KEY_ID }}" >> .env
          echo "FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }}" >> .env
          echo "FIREBASE_CLIENT_ID=${{ secrets.FIREBASE_CLIENT_ID }}" >> .env
          echo 'FIREBASE_PRIVATE_KEY="${{ secrets.FIREBASE_PRIVATE_KEY }}"' >> .env

          # .env 파일 권한 설정
          chmod 600 .env

          # 가상환경 없으면 생성
          [ ! -d "venv" ] && python3 -m venv venv
      
          # 가상환경 활성화
          source venv/bin/activate
      
          # 패키지 설치
          pip install --upgrade pip
          pip install -r requirements.txt
          
          # 서버 실행 전 기존 프로세스 종료
          fuser -k 8000/tcp || true

          # 환경변수 테스트
          echo "Testing environment variables..."
          python3 -c "import os; from dotenv import load_dotenv; load_dotenv(); print('✅ JWT_SECRET_KEY:', 'SET' if os.getenv('JWT_SECRET_KEY') else '❌ NOT SET'); print('✅ FIREBASE_PROJECT_ID:', os.getenv('FIREBASE_PROJECT_ID', '❌ NOT SET')); print('✅ FIREBASE_PRIVATE_KEY_ID:', os.getenv('FIREBASE_PRIVATE_KEY_ID', '❌ NOT SET')); print('✅ FIREBASE_CLIENT_EMAIL:', os.getenv('FIREBASE_CLIENT_EMAIL', '❌ NOT SET')); print('✅ FIREBASE_CLIENT_ID:', os.getenv('FIREBASE_CLIENT_ID', '❌ NOT SET')); print('✅ FIREBASE_PRIVATE_KEY:', os.getenv('FIREBASE_PRIVATE_KEY', '❌ NOT SET')); print('✅ ACCESS_TOKEN_EXPIRE_MINUTES:', os.getenv('ACCESS_TOKEN_EXPIRE_MINUTES', '❌ NOT SET')); print('✅ REFRESH_TOKEN_EXPIRE_DAYS:', os.getenv('REFRESH_TOKEN_EXPIRE_DAYS', '❌ NOT SET')); print('✅ All environment variables loaded successfully!')"     

          
          # 서버 실행 (출력/입력 분리)
          nohup uvicorn main:app --host 0.0.0.0 --port 8000 > /dev/null 2>&1 < /dev/null &

          # 서버 시작 확인
          sleep 3
          if curl -f http://localhost:8000/health > /dev/null 2>&1; then
            echo "✅ 서버가 정상적으로 시작되었습니다!"
          else
            echo "❌ 서버 시작에 실패했습니다."
            # 로그 확인
            tail -20 nohup.out || echo "로그 파일이 없습니다."
          fi

        EOF
